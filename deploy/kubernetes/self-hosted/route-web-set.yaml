apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: route-web-set
  namespace: argocd
spec:
  syncPolicy:
    applicationsSync: create-only # create-only | create-update | create-delete
    preserveResourcesOnDeletion: true
  goTemplate: true
  goTemplateOptions: ["missingkey=error"]
  generators:
    - matrix:
        generators:
          # Common variables
          - list:
              elements:
                - gatewayNamespace: traefik
                  gatewayName: traefik-gateway
                  gatewayHttpSectionName: web
                  gatewayHttpsSectionName: websecure
                  project: self-hosted
                  namespace: self-hosted
                  serviceNamespace: self-hosted
                  servicePort: 80
          # Per route variables (support override common variables)
          - list:
              elements:
                - name: apitable
                  serviceName: apitable
                  hostnames: [FIXME-apitable.127.0.0.1.sslip.io]
                - name: baikal
                  serviceName: baikal
                  hostnames: [FIXME-baikal.127.0.0.1.sslip.io]
                - name: devtron
                  serviceName: devtron
                  hostnames: [FIXME-devtron.127.0.0.1.sslip.io]
                - name: etesync
                  serviceName: etesync
                  hostnames: [FIXME-etesync.127.0.0.1.sslip.io]
                - name: gitea
                  serviceName: gitea
                  hostnames: [FIXME-gitea.127.0.0.1.sslip.io]
                - name: kubepi
                  serviceName: kubepi
                  hostnames: [FIXME-kubepi.127.0.0.1.sslip.io]
                - name: meshery
                  project: infra
                  namespace: meshery
                  serviceNamespace: meshery
                  serviceName: meshery
                  hostnames: [FIXME-meshery.127.0.0.1.sslip.io]
                - name: stalwart
                  serviceName: stalwart
                  hostnames: [FIXME-stalwart.127.0.0.1.sslip.io]

  template:
    metadata:
      name: '{{ .name }}-routes'
    spec:
      project: '{{ .project }}'
      destination:
        server: https://kubernetes.default.svc
        namespace: '{{ .namespace }}'

  templatePatch: |
    spec:
      source:
        repoURL: https://d4nnyx.github.io/helm-raw/
        chart: helm-raw
        targetRevision: 0.1.0
        helm:
          valuesObject:
            manifests:
              - apiVersion: gateway.networking.k8s.io/v1
                kind: HTTPRoute
                metadata:
                  name: '{{ .name }}-https'
                  namespace: '{{ .namespace }}'
                  labels:
                    app.kubernetes.io/name: '{{ .name }}'
                    app.kubernetes.io/component: https
                spec:
                  parentRefs:
                    - group: gateway.networking.k8s.io
                      kind: Gateway
                      namespace: '{{ .gatewayNamespace }}'
                      name:  '{{ .gatewayName }}'
                      sectionName: '{{ .gatewayHttpsSectionName }}'
                  hostnames:
                    {{ toYaml .hostnames | indent 20 }}
                  rules:
                    - matches:
                        - path:
                            type: PathPrefix
                            value: /
                      backendRefs:
                        - kind: Service
                          namespace: '{{ .serviceNamespace }}'
                          name: '{{ .serviceName }}'
                          port: {{ .servicePort }}

              - apiVersion: gateway.networking.k8s.io/v1
                kind: HTTPRoute
                metadata:
                  name: '{{ .name }}-http'
                  namespace: '{{ .namespace }}'
                  labels:
                    app.kubernetes.io/name: '{{ .name }}'
                    app.kubernetes.io/component: http
                spec:
                  parentRefs:
                    - group: gateway.networking.k8s.io
                      kind: Gateway
                      namespace: '{{ .gatewayNamespace }}'
                      name:  '{{ .gatewayName }}'
                      sectionName: '{{ .gatewayHttpSectionName }}'
                  hostnames:
                    {{ toYaml .hostnames | indent 20 }}
                  rules:
                    - matches:
                        - path:
                            type: PathPrefix
                            value: /
                      filters:
                        - type: RequestRedirect
                          requestRedirect:
                            scheme: https
                            statusCode: 302
